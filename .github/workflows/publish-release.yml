# 1. Update changelog
# 2. Upload a Python Package using Twine

name: Release fosslight_scanner

on:
  release:
    types: [published]

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Get Release
      uses: bruceadams/get-release@v1.3.2
      id: get_release
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Bump version
      run: |
        pip install --upgrade bumpversion
        CURRENT_VERSION=$(grep -Po "(?<=version=')[^']*" setup.py)
        echo "Current version: ${CURRENT_VERSION}"
        
        # NEW_TAG가 설정되어 있는지 확인
        if [ -z "$NEW_TAG" ]; then
          echo "Error: NEW_TAG is not set"
          exit 1
        fi
        
        NEW_VERSION=$(echo ${NEW_TAG#v})
        echo "New version: ${NEW_VERSION}"
        
        # 새 버전이 유효한지 확인
        if [[ ! $NEW_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Invalid new version format"
          exit 1
        fi
        
        git config --global user.name "github-actions[bot]"
        git config --global user.email "fosslight-dev@lge.com"
        
        # bumpversion 실행 시 상세 로그 출력
        bumpversion --verbose patch --current-version $CURRENT_VERSION --new-version $NEW_VERSION setup.py
    - name: update changelog with gren
      env:
        GREN_GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        npm install github-release-notes@0.17.3
        node_modules/.bin/gren changelog --override
    - name: Commit files
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "fosslight-dev@lge.com"
        git add CHANGELOG.md
        git commit -m "Update ChangeLog"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.TOKEN }}
        branch: main

  deploy:
    runs-on: ubuntu-latest
    needs: update-changelog
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
